(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>p});var t=r(537),o=r.n(t),a=r(645),i=r.n(a),c=r(667),A=r.n(c),s=new URL(r(127),r.b),d=i()(o()),l=A()(s);d.push([n.id," /* Reset */\r\n\r\n*, *::before, *::after {\r\n    font-size: normal;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-family: 'Montserrat', cursive;\r\n}\r\n\r\n\r\n/* Main content */\r\n\r\n#content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: rgb(110, 70, 70);\r\n    min-height: 100vh;\r\n    width: minmax(100vw, auto);\r\n    background-image: url("+l+");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-height: 20vh;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    background-color: rgba(0,0,0,0.9);\r\n    color: rgba(255,255,255,0.9);\r\n    width: 100%;\r\n}\r\n\r\nheader h1 {\r\n    font-style: italic;\r\n    font-size: 3rem;\r\n}\r\n\r\n.navBtn {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: white;\r\n}\r\n\r\n.navBtn.active {\r\n    border-bottom: 2px white solid;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\nbutton {\r\n    font-size: 1.1rem;\r\n    padding: 0 15px 15px 15px;\r\n    border: none;\r\n}\r\n\r\nbutton:hover {\r\n    transform: translateY(-10%);\r\n    transition: 0.3s ease-in-out;\r\n}\r\n\r\nmain {\r\n    background-color: rgba(0,0,0,0.45);\r\n    border: solid 1px black;\r\n    max-width: 700px;\r\n    margin: 100px 200px;\r\n    color: white;\r\n    font-size: 2rem;\r\n    padding: 30px 100px;\r\n}\r\n\r\nfooter {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    background-color: rgba(0,0,0,0.45);\r\n    height: 50px;\r\n    width: 100%;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\na:hover {\r\n    color: rgba(255,255,255,0.7)\r\n}\r\n\r\n.home {\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    padding: 2rem;\r\n}\r\n\r\n.cookImg {\r\n    border-radius: 50%;\r\n    height: 250px;\r\n    width: 300px;\r\n    \r\n}\r\n\r\n.menu {\r\n    display: grid;\r\n    grid-template-columns: repeat(1, 1fr);\r\n    gap: 20px;\r\n}\r\n\r\n.recipeItem p {\r\n    font-size: 1rem;\r\n}\r\n\r\n.recipeItem img {\r\n    width: 50%;\r\n}\r\n\r\n\r\n@media (min-width: 700px) {\r\n    .menu {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    .recipeItem img {\r\n        width: 100%;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"CAAC,UAAU;;AAEX;IACI,iBAAiB;IACjB,sBAAsB;IACtB,SAAS;IACT,UAAU;AACd;;AAEA;IACI,kCAAkC;AACtC;;;AAGA,iBAAiB;;AAEjB;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,8BAA8B;IAC9B,kCAAkC;IAClC,iBAAiB;IACjB,0BAA0B;IAC1B,yDAAsD;IACtD,4BAA4B;IAC5B,sBAAsB;IACtB,4BAA4B;AAChC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,gBAAgB;IAChB,uBAAuB;IACvB,SAAS;IACT,iCAAiC;IACjC,4BAA4B;IAC5B,WAAW;AACf;;AAEA;IACI,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,6BAA6B;IAC7B,YAAY;AAChB;;AAEA;IACI,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,QAAQ;AACZ;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;AAChB;;AAEA;IACI,2BAA2B;IAC3B,4BAA4B;AAChC;;AAEA;IACI,kCAAkC;IAClC,uBAAuB;IACvB,gBAAgB;IAChB,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,uBAAuB;IACvB,YAAY;IACZ,kCAAkC;IAClC,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,qBAAqB;IACrB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI;AACJ;;AAEA;IACI,WAAW;IACX,aAAa;IACb,SAAS;IACT,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,kBAAkB;IAClB,iBAAiB;IACjB,aAAa;AACjB;;AAEA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,qCAAqC;IACrC,SAAS;AACb;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,UAAU;AACd;;;AAGA;IACI;QACI,qCAAqC;IACzC;;IAEA;QACI,WAAW;IACf;AACJ",sourcesContent:[" /* Reset */\r\n\r\n*, *::before, *::after {\r\n    font-size: normal;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\nbody {\r\n    font-family: 'Montserrat', cursive;\r\n}\r\n\r\n\r\n/* Main content */\r\n\r\n#content {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    background-color: rgb(110, 70, 70);\r\n    min-height: 100vh;\r\n    width: minmax(100vw, auto);\r\n    background-image: url('../dist/images/background.jpg');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-attachment: fixed;\r\n}\r\n\r\nheader {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-height: 20vh;\r\n    justify-content: center;\r\n    gap: 20px;\r\n    background-color: rgba(0,0,0,0.9);\r\n    color: rgba(255,255,255,0.9);\r\n    width: 100%;\r\n}\r\n\r\nheader h1 {\r\n    font-style: italic;\r\n    font-size: 3rem;\r\n}\r\n\r\n.navBtn {\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    color: white;\r\n}\r\n\r\n.navBtn.active {\r\n    border-bottom: 2px white solid;\r\n}\r\n\r\nnav {\r\n    display: flex;\r\n    gap: 5px;\r\n}\r\n\r\nbutton {\r\n    font-size: 1.1rem;\r\n    padding: 0 15px 15px 15px;\r\n    border: none;\r\n}\r\n\r\nbutton:hover {\r\n    transform: translateY(-10%);\r\n    transition: 0.3s ease-in-out;\r\n}\r\n\r\nmain {\r\n    background-color: rgba(0,0,0,0.45);\r\n    border: solid 1px black;\r\n    max-width: 700px;\r\n    margin: 100px 200px;\r\n    color: white;\r\n    font-size: 2rem;\r\n    padding: 30px 100px;\r\n}\r\n\r\nfooter {\r\n    display: flex;\r\n    gap: 10px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: white;\r\n    background-color: rgba(0,0,0,0.45);\r\n    height: 50px;\r\n    width: 100%;\r\n}\r\n\r\na {\r\n    text-decoration: none;\r\n    color: white;\r\n    cursor: pointer;\r\n}\r\n\r\na:hover {\r\n    color: rgba(255,255,255,0.7)\r\n}\r\n\r\n.home {\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 20px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    text-align: center;\r\n    font-size: 1.5rem;\r\n    padding: 2rem;\r\n}\r\n\r\n.cookImg {\r\n    border-radius: 50%;\r\n    height: 250px;\r\n    width: 300px;\r\n    \r\n}\r\n\r\n.menu {\r\n    display: grid;\r\n    grid-template-columns: repeat(1, 1fr);\r\n    gap: 20px;\r\n}\r\n\r\n.recipeItem p {\r\n    font-size: 1rem;\r\n}\r\n\r\n.recipeItem img {\r\n    width: 50%;\r\n}\r\n\r\n\r\n@media (min-width: 700px) {\r\n    .menu {\r\n        grid-template-columns: repeat(2, 1fr);\r\n    }\r\n\r\n    .recipeItem img {\r\n        width: 100%;\r\n    }\r\n}"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=t.base?A[0]+t.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=r(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=o(u,t);t.byIndex=c,e.splice(c,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=r(a[i]);e[c].references--}for(var A=t(n,o),s=0;s<a.length;s++){var d=r(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},127:(n,e,r)=>{n.exports=r.p+"7eb0c19e7a62c8848072.jpg"}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.m=n,r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),r.b=document.baseURI||self.location.href,r.nc=void 0,(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),a=r(569),i=r.n(a),c=r(565),A=r.n(c),s=r(216),d=r.n(s),l=r(589),p=r.n(l),u=r(426),m={};function C(n){const e=document.createElement("p");return e.textContent=n,e}function g(){const n=document.createElement("div");function e(n,e){const r=document.createElement("div");r.classList.add("recipeItem");const t=document.createElement("img");t.src=`images/pizzas/${n.toLowerCase()}.png`;const o=document.createElement("h2");o.textContent=n;const a=document.createElement("p");return a.textContent=e,r.append(t,o,a),r}n.classList.add("menu"),n.appendChild(e("Pizza1","Ingredient1, ingredient2, ingredient3, ingredient4, etc.")),n.appendChild(e("Pizza2","Ingredient1, ingredient2, ingredient3, ingredient4, etc.")),n.appendChild(e("Pizza3","Ingredient1, ingredient2, ingredient3, ingredient4, etc.")),n.appendChild(e("Pizza4","Ingredient1, ingredient2, ingredient3, ingredient4, etc."));const r=document.querySelector("main");r.textContent="",r.appendChild(n)}function f(n){document.querySelectorAll(".navBtn").forEach((n=>{n!==this&&n.classList.remove("active")})),n.classList.add("active")}m.styleTagTransform=p(),m.setAttributes=A(),m.insert=i().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=d(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals,function(){const n=document.getElementById("content");n.appendChild(function(){const n=document.createElement("header"),e=document.createElement("h1");e.textContent="Chez la mama";const r=document.createElement("nav"),t=document.createElement("button");t.textContent="Home",t.classList.add("homeBtn","navBtn"),t.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(t),function(){const n=document.createElement("div");n.classList.add("home");const e=document.createElement("img");e.classList.add("cookImg"),e.src="images/cook2.jpg",n.appendChild(C("The best french cuisine you'll ever taste!")),n.appendChild(C("Made with love since 1975")),n.appendChild(e),n.appendChild(C("L'essayer c'est l'adopter !"));const r=document.querySelector("main");r.textContent="",r.appendChild(n)}())}));const o=document.createElement("button");o.textContent="Menu",o.classList.add("menuBtn","navBtn"),o.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(o),g())}));const a=document.createElement("button");return a.classList.add("contactBtn","navBtn"),a.textContent="Contact",a.addEventListener("click",(n=>{n.target.classList.contains("active")||(f(a),function(){const n=document.querySelector("main"),e=document.createElement("p");e.textContent="MDR je fais la même chose depuis contact.js",n.textContent="",n.appendChild(e)}())})),r.append(t,o,a),n.append(e,r),n}()),n.appendChild(document.createElement("main")),n.appendChild(function(){const n=document.createElement("footer"),e=document.createElement("p");e.textContent=`Copyright © moi  ${(new Date).getFullYear()} Rafikidu37`;const r=document.createElement("a");return r.textContent="GITHUB LINK",r.href="https://github.com/r-marmor/Restaurant_page",n.append(e,r),n}()),f(document.querySelector(".homeBtn")),g()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,